 {
    "env": {
        "browser": true
    },
    "extends": [
        "eslint:recommended",
        "google"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "tsconfig.json",
        "ecmaVersion": "latest",
        "sourceType": "script"
    },
    "plugins": ["@typescript-eslint"],
    "rules": {
        "@typescript-eslint/indent": ["error"],
        "@typescript-eslint/no-explicit-any": ["error"],
        "@typescript-eslint/no-inferrable-types": ["error"],
        "@typescript-eslint/no-require-imports": ["error"],
        "@typescript-eslint/no-type-alias": ["error", {
            "allowAliases": "always",
            "allowCallbacks": "always",
            "allowConditionalTypes": "never",
            "allowConstructors": "never",
            "allowGenerics": "always",
            "allowLiterals": "always",
            "allowMappedTypes": "never",
            "allowTupleTypes": "always"
        }],
        "@typescript-eslint/no-unnecessary-type-assertion": ["error"],
        "@typescript-eslint/no-unsafe-argument": ["error"],
        "@typescript-eslint/no-unsafe-assignment": ["error"],
        "@typescript-eslint/no-unsafe-member-access": ["error"],
        "@typescript-eslint/no-unused-vars": ["error"],
        "@typescript-eslint/prefer-as-const": ["error"],
        "@typescript-eslint/prefer-for-of": ["error"],
        "@typescript-eslint/prefer-function-type": ["error"],
        "@typescript-eslint/prefer-includes": ["error"],
        "@typescript-eslint/prefer-literal-enum-member": ["error"],
        "@typescript-eslint/prefer-nullish-coalescing": ["error"],
        "@typescript-eslint/semi": ["error"],
        "@typescript-eslint/space-infix-ops": ["error", { "int32Hint": false }],
        "@typescript-eslint/type-annotation-spacing": ["error", {
            "before": true,
            "after": true,
            "overrides": {
                "colon": {
                    "before": false
                }
            }
        }],
        "eqeqeq": "error",
        "indent": "off", // @typescript-eslint/indent
        "max-len": ["error", { "code": 120 }],
        "no-constant-condition": "off",
        "no-undef": "error",
        "no-unused-vars": "off", // @typescript-eslint/no-unused-vars
        "require-jsdoc": "off",
        "semi": "off", // @typescript-eslint/semi
        "space-infix-ops": ["off"]
    }
}
